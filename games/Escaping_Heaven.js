/*
@title: escape_Heaven
@author: Fiedland T
@tags: ["puzzle"]
@img: ""
@addedOn: 2024-05-20
*/
	const player = "p"
    const goal = "e"
    const wall = "w"
    const trap = "l"
    const key = "k"
    const lock = "c"
    const back = "b"
    const entity = "t"
   
    
setLegend(
	[ player, bitmap`
................
................
.....3...3......
.....99999......
....9000009.....
.0..9060609..0..
000.9000009.000.
0000.99999.0000.
000093333390000.
00.09333339.000.
0...9333339...0.
....9333339.....
.....33333......
.....99.99......
.....99.99......
.....99.99......` ],
    [ goal, bitmap`
............7...
...7......7.....
.5...757777..7..
....77778877.7..
...777855887775.
.7777852258757..
...7852222877...
...7822222587...
...78222225875.7
5..78222225877..
...7785225887...
...577825877....
.7...778777777..
...7...77....7..
........7.......
................`],
    [ wall, bitmap`
7588855885577777
7588855585875555
7557775758855588
7778877755757777
7578588755885777
7775588888855555
7777755555578888
5855757878578558
5585777788558577
7755555778557577
5555555887777557
5588777558877777
8887888855777877
8558777777587878
8858777777588888
8588857777787788`],
    [ trap, bitmap`
.....6666.......
....66..666.....
....6....66.....
.....66666......
.....22222......
..7..26262..7...
7777.2222..7777.
.7777..2..7777..
.....22222......
....2222222.....
.....22222......
.....22222......
...2..222.7.....
.....7222..2....
.....2.2........
...7..2...2.....`],
    [ key, bitmap`
................
.000............
00300...........
.000............
......0000......
....00000000....
...0000CC0000...
.00000932900000.
.00000933900000.
.00000999900000.
..000000000000..
.....00000......
............000.
...........00300
............000.
................`],
    [ lock, bitmap`
...........2....
.2..............
................
2...............
...............2
................
....5..5........
....55.5........
....5557..55....
...557775565....
...55777775.....
....7776775.....
....7766775.....
.....76667......
.....5..........
................`],
    [ back, bitmap`
1111111111111111
1111111111111111
1111611111111161
1116111111111111
1111111111111111
1111111111111111
1111111166111111
1111111111111111
1111111111111111
1111111111111111
1111111111111111
1116111111111161
1161111111111111
1111111116111111
1111111111111111
1111111111111111`],
    [ entity, bitmap `
................
................
.777............
72627...........
.777...77.......
.....777777.....
....77555577....
...7725665277...
..772256652277..
.272225555222722
...7772222777...
......7777......
............777.
...........72627
............777.
................`]
  );
setSolids([ player, wall, lock ])

let level = 0; 
const levels = [
  map`
...e...
..www.l
l......
.......
www.www
www.www
www.www
wwwpwww`,
  map`
..l.....tw
.........w
..wwwwwwww
..........
...wpw..l.
wwwwww....
...l......
e......l..
..........`,
  map`
........w
...l....w
..www.w.w
l.wew.w.w
..w.w.w.w
..w.w.w.w
..w.wpw.w
.lw.wwwtw
....wwwww`,
  map`
.........
..wwwwl..
....tw...
.l...w...
..wwww..l
..w......
k.w.wwwwc
www.we...
p...w....`,
  map`
l...w...e
....w....
..l..c...
.ww...ww.
w...p...w
.ww...ww.
......l..
.t..w....
k...w..l.`,
  map`
wpw.ewwwwww
w.wl.......
w..wwwwww.l
w...l..kw..
w.w....www.
wwww.www.w.
w..l.wl..w.
ww......lw.
w..www...w.
wl.....www.
wwwwwwc....`
]
                
setMap(levels[level])
const currentLevel = levels[level]; 
setMap(currentLevel);

setPushables({
	[ player ]: []
})

//Enemy trap

afterInput(() => {
    const trapsCovered = tilesWith(player, trap); 
    
    if (trapsCovered.length > 0) {
        setMap(levels[level])
    }
})



//movement

onInput("s", () => {
	getFirst(player).y += 1;
});

onInput("w", () => {
	getFirst(player).y -= 1;
});

onInput("d", () => {
	getFirst(player).x += 1;
})

onInput("a", () => {
	getFirst(player).x -= 1
})


setBackground(back)

//Success
 afterInput(() => {
    const goalsCovered = tilesWith(player, goal); 
    if (goalsCovered.length >= 1) {
        
        level = level + 1;
        if (level < levels.length) {
            setMap(levels[level]);
        } else {
            addText("YOU ESCAPED", { y: 4, color: color`2` });
        }
    }
});


// Key/lock

afterInput(() => {
  const goalsCovered = tilesWith(player, goal);
  const keysTaken = tilesWith(player, key); 
if (goalsCovered.length >= 1) {
level = level + 1;
    const currentLevel = levels[level];
    if (currentLevel !== undefined) {
      setMap(currentLevel);
    } else {
    }
}
if (keysTaken.length >= 1) {
getFirst(lock).remove();
getFirst(key).remove();
}
});

//Music

const melody = tune`
200: D5~200 + G5-200,
200: G4-200 + B4~200,
200: D4/200 + F4/200 + D5~200,
200: B4~200 + D4^200,
200: D5~200 + G4-200,
200: F4/200 + A4/200 + B4~200 + D4^200,
200: G4/200 + B4/200 + D5~200 + D4^200,
200: B4~200 + G4-200,
200: A4/200 + C5/200 + D5~200 + D4^200,
200: G4/200 + B4/200,
200: F4/200 + A4/200 + D5~200 + G5-200 + D4^200,
200: D4^200 + B4~200,
200: D4/200 + F4/200 + D5~200 + G5-200 + G4^200,
200: C4/200 + E4/200 + G5~200 + B4~200 + D4^200,
200: D4/200 + F4/200 + D5~200 + G5-200 + G4^200,
200: G5~200 + B4~200 + D4^200,
200: F4/200 + D5~200 + G5-200 + D4^200 + G4^200,
200: G5~200 + B4~200,
200: D4/200 + F4/200 + D5~200 + G4-200,
200: B4~200,
200: D5~200 + D4^200,
200: F4/200 + A4/200 + B4~200 + D4^200 + G4-200,
200: G4/200 + B4/200 + D5~200,
200: B4~200 + D4^200,
200: A4/200 + C5/200 + D5~200 + G4-200,
200: G4/200 + B4/200 + D4^200,
200: F4/200 + A4/200 + D5~200 + D4^200 + G5-200,
200: B4~200 + G4-200,
200: D4/200 + F4/200 + D5~200 + G5-200,
200: B4~200,
200: D4/200 + F4/200 + D5~200 + G4-200 + G5-200,
200: B4~200`
playTune(melody) 
const playback = playTune(melody, Infinity)

const enemyLaugh = tune`
62.37006237006237: B5~62.37006237006237,
62.37006237006237: B5~62.37006237006237 + A5~62.37006237006237,
62.37006237006237: B5~62.37006237006237 + A5~62.37006237006237,
62.37006237006237: B5~62.37006237006237 + A5~62.37006237006237,
62.37006237006237: B5~62.37006237006237 + A5~62.37006237006237,
62.37006237006237: F5~62.37006237006237 + E5~62.37006237006237 + A5~62.37006237006237 + G5~62.37006237006237,
62.37006237006237: E5~62.37006237006237 + D5~62.37006237006237,
62.37006237006237: D5~62.37006237006237 + C5~62.37006237006237,
62.37006237006237: C5~62.37006237006237 + B4~62.37006237006237,
62.37006237006237: B4~62.37006237006237 + A4~62.37006237006237 + G4~62.37006237006237,
1372.1413721413721`

